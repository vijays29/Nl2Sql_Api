from fastapi import HTTPException
from src.utils.logger import get_logger

logger=get_logger("Schema_Logger")

def get_metadata() -> list | None:

    try:
        return [
            "The database tables to query are LEAF_AND_SPINE_C93180YC_REPRT, CARD_SLOT_HIERARCHY_REPRT and LEAF_SPIN_E100G_UTIL_REPRT:"
    
            "LEAF_AND_SPINE_C93180YC_REPRT:ID VARCHAR NOT NULL ENABLE,HOST_NAME VARCHAR,DVCIP VARCHAR,LOC_CODE VARCHAR,RTR_MODEL VARCHAR,DVC_TYPE VARCHAR,TOTA_L100G_PRTS VARCHAR,USE_D100G_PRTS VARCHAR,FRE_E100G_PRTS VARCHAR,TOTA_L10G_PRTS VARCHAR,USE_D10G_PRTS VARCHAR,FRE_E10G_PRTS VARCHAR,TOTA_L1G_PRTS VARCHAR,USE_D1G_PRTS VARCHAR,FRE_E1G_PRTS VARCHAR,PRIMARY KEY (ID)",
            "CARD_SLOT_HIERARCHY_REPRT:ID VARCHAR NOT NULL ENABLE,MODEL VARCHAR2,SERIAL_NUM VARCHAR,FIRMWARE_REV VARCHAR,MANUFACTURER VARCHAR,DESC VARCHAR,CITY VARCHAR,STATE VARCHAR,SW_REV VARCHAR,HARDWARE_REV VARCHAR,REGION VARCHAR,HOST_NAME VARCHAR,DVC_ROLE VARCHAR,SLOT_HIERARCHY_DETS VARCHAR,ISSFP VARCHAR,DOM VARCHAR,MODEL_NAME VARCHAR,DVCID VARCHAR,PRIMARY KEY (ID)",
            "LEAF_SPIN_E100G_UTIL_REPRT:ID VARCHAR NOT NULL ENABLE,HOST_NAME VARCHAR,DVCIP VARCHAR,LOC_CODE VARCHAR,RTR_MODEL VARCHAR,DVC_TYPE VARCHAR,TOTA_L100G_PRTS VARCHAR,USE_D100G_PRTS VARCHAR,FRE_E100G_PRTS VARCHAR,FRE_E100G_PERCENT VARCHAR,BREAKOU_T10G_PRTS VARCHAR,TOTA_L10G_PRTS VARCHAR,USE_D10G_PRTS VARCHAR,FRE_E10G_PRTS VARCHAR,FRE_E10G_PERCENT VARCHAR,TOTA_L100G_CARD_PRTS VARCHAR,PRIMARY KEY (ID)"

            #  """POINT_TASK:DTYPE  varchar(31) ,TASK_ID bigint PRI,TASK_STATE  varchar(255),TASK_STATUS varchar(255),TASK_NAME  varchar(255),TASK_TYPE  varchar(255),CATEGORY varchar(255),COMPLETED_DATE datetime(6),CONSTRAINT_TASK  varchar(255),CONSTRAINT_TYPE varchar(255),CUSTOMER_SEGMENT varchar(255),DOMAIN varchar(255),CREATED_DATE datetime(6),DESIGN_WITH_ONLY_CONSTRAINT bit(1),INTERNAL_ORDER_ID bigint MUL,LAST_MODIFIED_DATE datetime(6),M6ORDER_TYPE  varchar(255),MANUAL_DOMAIN_SELECTION  bit(1),NSO_ACTIVATE_STATE  varchar(255),ORDER_ID  bigint MUL,ORDER_SUB_TYPE varchar(255),ORDER_TYPE varchar(255),PICKED_DATE datetime(6),OWNER varchar(255),OWNER_GROUP varchar(255),PARENT_TASK_ID bigint,ROOT_ORDER_LINE_ID bigint,SERVICE_TYPE varchar(255),SFP_CONSTRAINT_STATE varchar(255),SOURCE  varchar(255),SPS_ERROR_REASON varchar(255),SYSTEM_ASSISTED  varchar(255),USER_NAME  varchar(255),BALTM_AWAITING_IN_ACTIVATION  bit(1),ROLLBACK_TYPE varchar(255)"""
        ]

    except Exception as e:
        logger.error(f"Error retrieving metadata: {e}")
        raise HTTPException(status_code=500, detail="Schema metadata retrieval failed.")